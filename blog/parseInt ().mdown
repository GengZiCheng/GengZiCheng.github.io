# parseInt ()
[转](http://blog.csdn.net/fudesign2008/article/details/6115149)

    var b = parseInt("01");

    alert("b="+b);

    var c = parseInt("09/08/2009");

    alert("c="+c);

答案应该是b=1 c=0

看了很多文章在解释为什么c=0，至今没有一个正确的解释。本来是比较简单的问题，这里专门写一篇博文出来详细解释下。

parseInt()是用来解析字符串，返回值是整数。有几个特点：

第一 ：无视被解析字符串最前和最后的空格，即：" 111   "和"111"是一样的

第二 ：正规格式是parseInt(string,radix)。radix可以省略，为0或者2-32之间的整数，用来表示被解析数值的进制。（注意不是解析返回结果的进制）。如果radix不在此范围内，返回NaN

第三 ：如果radix 省略或者为0，则按默认进制对string进行解析。

第四 ：string的首字符为0,则默认解析为8进制。string首字符为0x则默认解析为16进制。其他情况默认为10进制。

第五 ：解析从第一个可以解析的字符开始，到第一个不能解析的字符（如空格，标点符号等）结束。后面的字符不再解析。

第六 ：如果第一个字符不可以解析，则返回NaN。如"a8989"

现在我们再回头来看这个题就容易理解了。

b的值首字母是0，按8进制解析后面的数值，也就是8进制的1。自然返回值为1。

难点在第二个。

c的首字符是0,一般想法是按8进制进行解析。但是我们发现第二个字符9已经不是8进制数，也就是说9是第一个不能解析的字符。parseInt("09/08/2009")也就变成了parseInt("0")；结果再明显不过，是0。

如果我们稍加变化parseInt("0119/08/2009"),首字符是0，按八进制解析，同样读到9的时候不能解析。也就变成了parseInt("011"),结果也很明显，是9。 
